/*******************************************
*********HYPERLEDGER COMPOSER RULES*********
********************************************/

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

/*******************************************
***********ALETHEIA NETWORK RULES***********
*********************************************/

/**
* Reglas sobre transacciones y activos
**/

rule AutorizarContratoTransaccion {
   description: "Permitir a Cuentahabiente hacer una transaccion de autorizacion de contrato"
   participant: "org.aabo.Cuentahabiente"
   operation: CREATE
   resource: "org.aabo.autorizar"
   action: ALLOW
}

rule RevocarContratoTransaccion {
   description: "Permitir a Cuentahabiente hacer una transaccion de revocacion de contrato"
   participant: "org.aabo.Cuentahabiente"
   operation: CREATE
   resource: "org.aabo.revocar"
   action: ALLOW
}

rule CambiarFechaContratoTransaccion {
   description: "Permitir a Cuentahabiente hacer una transaccion de cambio de fecha de contrato"
   participant: "org.aabo.Cuentahabiente"
   operation: CREATE
   resource: "org.aabo.cambiarFecha"
   action: ALLOW
}

rule AgregarInfoContratoTransaccion {
   description: "Permitir a Cliente hacer una transaccion para agregar info a un contrato"
   participant(p): "org.aabo.Cliente"
   operation: CREATE
   resource: "org.aabo.agregarInfo"
   condition: (p.permisos[2])
   action: ALLOW
}

rule CrearContrato {
   description: "Permite a Cuentahabiente crear un contrato"
   participant: "org.aabo.Cuentahabiente"
   operation: CREATE
   resource: "org.aabo.contrato"
   action: ALLOW
}

/**
* Reglas sobre bloques
**/

rule CrearBloque {
  description: "Permite a Cliente crear un bloque"
  participant(p): "org.aabo.Cliente"
  operation: CREATE
  resource: "org.aabo.bloque"
  condition: (p.permisos[4])
  action: ALLOW
}

rule AgregarBloqueTransaccion {
  description: "Permite a Cliente agregar un bloque a un Cuentahabiente"
  participant(p): "org.aabo.Cliente"
  operation: CREATE
  resource: "org.aabo.agregarBloque"
  condition: (p.permisos[4])
  action: ALLOW
}

rule VerBloque {
  description: "Permite a Cuentahabiente ver un bloque si tiene permiso"
  participant(p): "org.aabo.Cuentahabiente"
  operation: READ
  resource(r): "org.aabo.bloque"
  condition: ((p.getIdentifier() == r.chID) && r.visibleCh)
  action: ALLOW
}

rule EditarBloque {
  description: "Permite a Cuentahabiente editar un bloque si tiene permiso"
  participant(p): "org.aabo.Cuentahabiente"
  operation: UPDATE
  resource(r): "org.aabo.bloque"
  condition: ((p.getIdentifier() == r.chID) && r.visibleCh && r.editableCh)
  action: ALLOW
}

/***
* Reglas sobre acceso
**/

rule AccesoContratoIdentidadPropia {
   description: "Permitir a Cuentahabiente acceso a su contrato de identidad"
   participant(p): "org.aabo.Cuentahabiente"
   operation: READ, DELETE, UPDATE
   resource(r): "org.aabo.contrato"
   condition: (r.chID == p.getIdentifier())
   action: ALLOW
}

rule AccesoCliente {
   description: "Permitir a Cliente acceso a su información"
   participant(p): "org.aabo.Cliente"
   operation: READ
   resource(r): "org.aabo.Cliente"
   condition: (p.getIdentifier() == r.getIdentifier())
   action: ALLOW
}

rule AccesoIdentidadPropia {
   description: "Permitir a Cuentahabiente acceso a su identidad"
   participant(p): "org.aabo.Cuentahabiente"
   operation: READ, UPDATE
   resource(r): "org.aabo.Cuentahabiente"
   condition: (r.getIdentifier() == p.getIdentifier())
   action: ALLOW
}

rule AccesoClienteCuentahabiente {
    description: "Permite a los Clientes que tengan autorizado accesar a la información de un Cuentahabiente"
    participant(p): "org.aabo.Cliente"
    operation: READ, UPDATE
    resource(r): "org.aabo.contrato"
    condition: ((r.autorizados && r.autorizados.indexOf(p.getIdentifier()) > -1) && !(new Date() > new Date(r.endDate)) && p.permisos[1])
    action: ALLOW
}

rule AccesoBloquePropio {
  description: "Permitir a Cliente acceso a sus bloques"
  participant(p): "org.aabo.Cliente"
  operation: READ, UPDATE, DELETE
  resource(r): "org.aabo.bloque"
  condition: (p.getIdentifier() == r.cID)
  action: ALLOW
}

/**
* Reglas sobre accesos de administrador
**/

rule AdminClientes {
    description: "Permite al administrador todas las acciones sobre clientes"
    participant: "org.aabo.Administrador"
    operation: ALL
    resource: "org.aabo.Cliente"
    action: ALLOW
}

rule AdminCuentahabientes {
    description: "Permite al administrador todas las acciones menos leer sobre cuentahabientes"
    participant: "org.aabo.Administrador"
    operation: CREATE, DELETE, UPDATE
    resource: "org.aabo.Cuentahabiente"
    action: ALLOW
}

rule CrearCuentahabiente {
  description: "Permite a Cliente crear Cuentahabiente si tiene permiso"
  participant(p): "org.aabo.Cliente"
  operation: CREATE
  resource: "org.aabo.Cuentahabiente"
  condition: (p.permisos[0])
  action: ALLOW
}

rule BorrarCuentahabiente {
  description: "Permite a Cliente borrar Cuentahabiente si tiene permiso"
  participant(p): "org.aabo.Cliente"
  operation: DELETE
  resource: "org.aabo.Cuentahabiente"
  condition: (p.permisos[3])
  action: ALLOW
}